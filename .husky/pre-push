#!/bin/bash
# Prevents force-pushing to master
# Prompts to build before push

spaceGap="                                    "
lineLine="------------------------------------"
sparkLine="************************************\n"

separator="$spaceGap\n$sparkLine\n$spaceGap"

echo "$separator" 
echo "🏁 Pre-push Hook: Checking branch name..."


COMMAND=$(grep "git push" ~/.zsh_history | tail -n 1 || grep "git push" ~/.bash_history | tail -n 1 || grep "git push" ~/.history | tail -n 1)
BRANCH=$(git rev-parse --abbrev-ref HEAD)

git fetch
echo "$lineLine"
HEADHASH=$(git rev-parse HEAD)

if [ -z "$(git ls-remote --heads origin ${BRANCH} 2>/dev/null)" ]; then
    echo "$spaceGap"
else
  UPSTREAMHASH=$(git rev-parse origin/${BRANCH})
fi


if [[ "$BRANCH" == 'master' || "$COMMAND" == *"master"* ]]; then
  echo "🚩 Cannot push to remote master branch, create your own branch and use PR." 
  echo "$separator" && exit 1
fi

if [[ "$BRANCH" == 'development' || "$COMMAND" == *"development"* ]]; then
  echo "🚩 Cannot push to remote development branch, create your own branch and use PR." 
  echo "$separator" && exit 1
fi

echo "💚 Finished checking branch name."
echo "$separator"


exec < /dev/tty
res=""
response1=""
while [[ ! "$response1" =~ ^[yn]$ ]]; do
    read -p "🤨 Build Storybook? (y/n): " response1
    echo "$lineLine"
    if [[ ! "$response1" =~ ^[yn]$ ]]; then
        echo "🤌  Please enter 'y' or 'n'."
        echo "$lineLine"
    fi
done

if [ "$response1" == "y" ]; then
    npm run build-storybook || git reset --hard HEAD
    res="y"
else
    echo "⏩ Skipped build-storybook."
    echo "$lineLine"
fi

echo "$separator"
response2=""
while [[ ! "$response2" =~ ^[yn]$ ]]; do
    read -p "🤨 Build Storybook HUD? (y/n): " response2
    echo "$lineLine"
    if [[ ! "$response2" =~ ^[yn]$ ]]; then
        echo "🤌  Please enter 'y' or 'n'."
        echo "$lineLine"
    fi
done

if [ "$response2" == "y" ]; then
    npm run build-storybook-hud || git reset --hard HEAD
    res="y"
else
    echo "⏩ Skipped build-storybook-hud."
    echo "$lineLine"
fi

if [[ "$res" == "y" ]]; then
   a="${BRANCH}" b="origin/${BRANCH}"
   base=$( git merge-base $a $b )
   local=$( git rev-parse  $a )
   origin=$( git rev-parse  $b )

  if [[ $local == "$origin" ]]; then
    echo up-to-date
    git add ./storybook-*static
    git commit -m "Build Storybook Static"
  elif [[ $local == "$base" ]]; then
    echo behind
    git add ./storybook-*static
    git commit -m "Build Storybook Static"
  elif [[ $origin == "$base" ]]; then
    echo ahead
    git add .
    git commit --amend --no-edit  --no-verify
  else
    echo diverged
    git add ./storybook-*static
    git commit -m "Build Storybook Static"
  fi
   
    echo "$lineLine"
    echo "💚 Finished build check & Commit!"
    echo "$separator" 
else
    echo "💚 Finished pre-push check!"
    echo "$separator" 
fi

exit 0
