#!/bin/bash
# Prevents force-pushing to master

echo "===\n>> Pre-push Hook: Checking branch name..."

BRANCH=`git rev-parse --abbrev-ref HEAD`
PROTECTED_BRANCHES="^(master|develop)"

if [[ "$BRANCH" =~ $PROTECTED_BRANCHES ]]
then
  echo "\nðŸš« Cannot push to remote $BRANCH branch, please create your own branch and use PR." && exit 1
fi

# if [[ $1 != *"$BRANCH"* ]]
# then
#   echo "\nðŸš« You must use (git push origin $BRANCH) \n" && exit 1
# fi

echo ">> Finish checking branch name \n==="

#!/bin/bash

exec < /dev/tty
echo "                                    "
response1=""
while [[ ! "$response1" =~ ^[yn]$ ]]; do
    read -p "ðŸ¤¨ Build Storybook? (y/n): " response1
    echo "------------------------------------"
    if [[ ! "$response1" =~ ^[yn]$ ]]; then
        echo "Please enter 'y' or 'n'."
        echo "------------------------------------"
    fi
done

if [ "$response1" == "y" ]; then
    npm run build-storybook || git reset --hard HEAD
else
    echo "Skipped build-storybook."
    echo "------------------------------------"
fi

exec < /dev/tty
echo "                                    "
echo "************************************"
echo "                                    "
response2=""
while [[ ! "$response2" =~ ^[yn]$ ]]; do
    read -p "ðŸ¤¨ Build Storybook HUD? (y/n): " response2
    echo "------------------------------------"
    if [[ ! "$response2" =~ ^[yn]$ ]]; then
        echo "Please enter 'y' or 'n'."
        echo "------------------------------------"
    fi
done

if [ "$response2" == "y" ]; then
    npm run build-storybook-hud || git reset --hard HEAD
else
    echo "Skipped build-storybook-hud."
    echo "------------------------------------"
fi

if [ "$response1" == "y" || "$response1" == "y" ]; then
    git commit --amend --no-verify
    echo "âœ… Finish build check!"
else
    echo "âœ… Finish build check!"
fi

# Continue with other pre-commit tasks or commands

exit 0